/*! (c) Andrea Giammarchi - ISC */
const{navigator:e,ServiceWorker:t,SharedWorker:n,Worker:r}=globalThis,{isArray:s}=Array,i=[],o=[],a=({data:{id:e,args:t}})=>{if(s(t)){const n=i.indexOf(e);-1<n&&o[n](...t)}},c=n=>n instanceof t?e.serviceWorker:n;let l=0;const d=(e,t,n,r=null,d=(e=>e))=>new Promise(((h,g)=>{let u=`proxied-worker:${t}:${l++}`;const f=c(e);if(f.addEventListener("message",(function e({data:{id:t,result:n,error:r}}){t===u&&(f.removeEventListener("message",e),null!=r?g(new Error(r)):h(d(n)))})),s(r)){n.push(r);for(let e=0,{length:t}=r;e<t;e++)switch(typeof r[e]){case"string":r[e]="$"+r[e];break;case"function":f.addEventListener("message",a);let t=o.indexOf(r[e]);t<0&&(t=o.push(r[e])-1,i[t]=`proxied-worker:cb:${l+++Math.random()}`),r[e]=i[t]}}e.postMessage({id:u,list:n})}));function h(s,i={type:"classic"},o=r){const a=(e,t)=>new Proxy(g.bind({id:e,list:t}),f),l=new FinalizationRegistry((e=>{h.then((t=>t.postMessage({id:`proxied-worker:${e}:-0`,list:[]})))})),h=new Promise((r=>{if(o===n){const{port:e}=new o(s,i);e.start(),r(e)}else o===t?e.serviceWorker.register(s,i).then((({installing:e,waiting:t,active:n})=>r(e||t||n))):r(new o(s,i))})),u=new WeakMap,f={apply(e,t,n){const{id:r,list:s}=e();s[s.length-1]+=".apply";for(let r=0,{length:s}=n;r<s;r++)if("function"==typeof n[r]){u.has(e)||u.set(e,new Map);const s=u.get(e);s.has(n[r])||s.set(n[r],n[r].bind(t)),n[r]=s.get(n[r])}return h.then((e=>d(e,r,s,n)))},construct(e,t){const{id:n,list:r}=e();return r[r.length-1]+=".new",h.then((e=>d(e,n,r,t,(e=>{const t=a(e,[]);return l.register(t,e),t}))))},get(e,t){const{id:n,list:r}=e(),{length:s}=r;switch(t){case"then":return s?(e,t)=>h.then((s=>d(s,n,r).then(e,t))):void 0;case"addEventListener":case"removeEventListener":if(!s&&!n)return(...e)=>h.then((n=>{c(n)[t](...e)}))}return a(n,r.concat(t))}};return a("",[])}function g(){return this}export default h;
