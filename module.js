/*! (c) Andrea Giammarchi - ISC */
let e=0;export default function(t){const s=new WeakMap;async function n(t,n){for(let i=0,{length:a}=n;i<a;i++)if(n[i].endsWith(".new")){const a=new(t[n[i].slice(0,-".new".length)])(...n[++i]);s.get(this).set(t=String(e++),a)}else t=n[i].endsWith(".apply")?await t[n[i].slice(0,-".apply".length)](...n[++i]):await t[n[i]];return t}async function i(e){const{source:i,data:{id:a,list:r}}=e;if(!/^proxied-worker:([^:]*?):-?\d+$/.test(a))return;s.has(this)||s.set(this,new Map);const l=RegExp.$1;let o,c;if(l.length){const e=s.get(this);if(!r.length)return void e.delete(l);try{o=await n.call(this,e.get(l),r)}catch({message:e}){c=e}}else try{o=await n.call(this,t,r)}catch({message:e}){c=e}(i||this).postMessage({id:a,result:o,error:c})}addEventListener("connect",(({ports:e=[]})=>{for(const t of e)t.addEventListener("message",i.bind(t)),t.start()})),addEventListener("message",i.bind(globalThis))};
