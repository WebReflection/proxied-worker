/*! (c) Andrea Giammarchi - ISC */
let e=0;export default function(t){const s=new WeakMap;async function n(t,n){for(let i=0,{length:a}=n;i<a;i++)if(n[i].endsWith(".new")){const a=new(t[n[i].slice(0,-".new".length)])(...n[++i]);s.get(this).set(t=String(e++),a)}else t=n[i].endsWith(".apply")?await t[n[i].slice(0,-".apply".length)](...n[++i]):await t[n[i]];return t}async function i({data:{id:e,list:i}}){if(!/^proxied-worker:([^:]*?):-?\d+$/.test(e))return;s.has(this)||s.set(this,new Map);const a=RegExp.$1;let r,l;if(a.length){const e=s.get(this);if(!i.length)return void e.delete(a);try{r=await n.call(this,e.get(a),i)}catch({message:e}){l=e}}else try{r=await n.call(this,t,i)}catch({message:e}){l=e}this.postMessage({id:e,result:r,error:l})}addEventListener("connect",(({ports:e=[]})=>{for(const t of e)t.addEventListener("message",i.bind(t)),t.start()})),addEventListener("message",i.bind(globalThis))};
