/*! (c) Andrea Giammarchi - ISC */
let e=0;export default function(t){const n=new Map,s=async(t,s)=>{for(let i=0,{length:a}=s;i<a;i++)if(s[i].endsWith(".new")){const a=new(t[s[i].slice(0,-".new".length)])(...s[++i]);n.set(t=String(e++),a)}else t=s[i].endsWith(".apply")?await t[s[i].slice(0,-".apply".length)](...s[++i]):await t[s[i]];return t};async function i({data:{id:e,list:i}}){if(!/^proxied-worker:([^:]*?):-?\d+$/.test(e))return;const a=RegExp.$1;let r,l;if(a.length){if(!i.length)return void n.delete(a);try{r=await s(n.get(a),i)}catch({message:e}){l=e}}else try{r=await s(t,i)}catch({message:e}){l=e}this.postMessage({id:e,result:r,error:l})}addEventListener("connect",(({ports:e=[]})=>{for(const t of e)t.addEventListener("message",i.bind(t)),t.start()})),addEventListener("message",i.bind(self))};
